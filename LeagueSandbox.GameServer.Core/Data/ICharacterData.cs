using LeagueSandbox.GameServer.Core.Domain.Enums;

namespace LeagueSandbox.GameServer.Core.Data
{
    public interface ICharacterData
    {
        float AbilityPowerIncPerLevel { get; }
        float AcquisitionRange { get; }
        float Armor { get; }
        float ArmorPerLevel { get; }
        float AttackCastTime { get; }
        float AttackDelayCastOffsetPercent { get; }
        float AttackDelayCastOffsetPercentAttackSpeedRatio { get; }
        float AttackDelayOffsetPercent { get; }
        float AttackRange { get; }
        float AttackSpeed { get; }
        float AttackSpeedPerLevel { get; }
        float AttackTotalTime { get; }
        float BaseAbilityPower { get; }
        float BaseAttack_Probability { get; }
        float BaseCritChance { get; }
        float BaseDamage { get; }
        float BaseDodge { get; }
        float BaseFactorHPRegen { get; }
        float BaseFactorMPRegen { get; }
        float BaseHP { get; }
        float BaseMP { get; }
        float BaseSpellEffectiveness { get; }
        float BaseStaticHPRegen { get; }
        float BaseStaticMPRegen { get; }
        float CritAttack_AttackCastDelayOffsetPercent { get; }
        float CritAttack_AttackDelayCastOffsetPercent { get; }
        float CritAttack_AttackDelayCastOffsetPercentAttackSpeedRatio { get; }
        float CritAttack_AttackDelayOffsetPercent { get; }
        float CritAttack_Probability { get; }
        float CritDamageBonus { get; }
        float CritPerLevel { get; }
        float DamagePerLevel { get; }
        float DelayCastOffsetPercent { get; }
        float DelayTotalTimePercent { get; }
        float ExperienceRadius { get; }
        float ExpGivenOnDeath { get; }
        string ExtraAttack1 { get; }
        float ExtraAttack1_AttackCastTime { get; }
        float ExtraAttack1_AttackDelayCastOffsetPercent { get; }
        float ExtraAttack1_AttackDelayOffsetPercent { get; }
        float ExtraAttack1_AttackTotalTime { get; }
        float ExtraAttack1_Probability { get; }
        string ExtraAttack2 { get; }
        float ExtraAttack2_AttackDelayCastOffsetPercent { get; }
        float ExtraAttack2_AttackDelayOffsetPercent { get; }
        float ExtraAttack2_Probability { get; }
        string ExtraAttack3 { get; }
        float ExtraAttack3_AttackDelayCastOffsetPercent { get; }
        float ExtraAttack3_AttackDelayOffsetPercent { get; }
        float ExtraAttack3_Probability { get; }
        string ExtraAttack4 { get; }
        float ExtraAttack4_Probability { get; }
        string ExtraAttack5 { get; }
        float ExtraAttack5_Probability { get; }
        string ExtraAttack6 { get; }
        float ExtraAttack6_Probability { get; }
        string ExtraAttack7 { get; }
        float ExtraAttack7_Probability { get; }
        string ExtraAttack8 { get; }
        float ExtraAttack8_Probability { get; }
        string ExtraCritAttack1 { get; }
        float ExtraCritAttack1_AttackDelayCastOffsetPercent { get; }
        string ExtraCritAttack2 { get; }
        string ExtraCritAttack3 { get; }
        string ExtraSpell1 { get; }
        string ExtraSpell10 { get; }
        string ExtraSpell11 { get; }
        string ExtraSpell12 { get; }
        string ExtraSpell13 { get; }
        string ExtraSpell14 { get; }
        string ExtraSpell2 { get; }
        string ExtraSpell3 { get; }
        string ExtraSpell4 { get; }
        string ExtraSpell5 { get; }
        string ExtraSpell6 { get; }
        string ExtraSpell7 { get; }
        string ExtraSpell8 { get; }
        string ExtraSpell9 { get; }
        float GameplayCollisionRadius { get; }
        float GlobalExpGivenOnDeath { get; }
        float GlobalGoldGivenOnDeath { get; }
        float GoldGivenOnDeath { get; }
        float HPPerLevel { get; }
        float HPRegenPerLevel { get; }
        int ChampionId { get; }
        float ChasingAttackRangePercent { get; }
        bool Immobile { get; }
        bool IsElite { get; }
        bool IsEpic { get; }
        bool IsImportantBotTarget { get; }
        bool IsMelee { get; }
        float Map10_ArmorPerLevel { get; }
        float Map10_BaseMP { get; }
        float Map8_BaseMP { get; }
        int[] MaxLevels { get; }
        float MoveSpeed { get; }
        float MPPerLevel { get; }
        float MPRegenPerLevel { get; }
        string Name { get; }
        bool NoAutoAttack { get; }
        PrimaryAbilityResourceType PARType { get; }
        string Passive1 { get; }
        float? Passive1Effect1 { get; }
        float? Passive1Effect2 { get; }
        float? Passive1Effect3 { get; }
        float? Passive1Effect4 { get; }
        float? Passive1Effect5 { get; }
        float Passive1Level1 { get; }
        float Passive1Level2 { get; }
        float Passive1Level3 { get; }
        float Passive1Level4 { get; }
        float Passive1Level5 { get; }
        float Passive1Level6 { get; }
        int Passive1NumEffects { get; }
        float Passive1Range { get; }
        string Passive2 { get; }
        float Passive2Effect1 { get; }
        float Passive2Effect2 { get; }
        float Passive2Effect3 { get; }
        float Passive2Effect4 { get; }
        float Passive2Level1 { get; }
        float Passive2Level2 { get; }
        float Passive2Level3 { get; }
        float Passive2Level4 { get; }
        int Passive2NumEffects { get; }
        string Passive3 { get; }
        float Passive3Level1 { get; }
        int Passive3NumEffects { get; }
        string Passive4 { get; }
        float Passive4Level1 { get; }
        int Passive4NumEffects { get; }
        string PassiveSpell { get; }
        float PathfindingCollisionRadius { get; }
        float PerceptionBubbleRadius { get; }
        float PostAttackMoveDelay { get; }
        bool RecordAsWard { get; }
        float SoulGivenOnDeath { get; }
        string Spell1 { get; }
        string Spell2 { get; }
        string Spell3 { get; }
        string Spell4 { get; }
        float SpellBlock { get; }
        float SpellBlockPerLevel { get; }
        int[] SpellsUpLevels1 { get; }
        int[] SpellsUpLevels2 { get; }
        int[] SpellsUpLevels3 { get; }
        int[] SpellsUpLevels4 { get; }
        int TowerTargetingPriorityBoost { get; }
    }
}